/*
 * Copyright (C) 2020 Slack Technologies, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.jetbrains.kotlin.gradle.plugin.KotlinBasePlugin

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    String defaultAgpVersion = "7.2.2"
    String agpVersion = findProperty("keeperTest.agpVersion")?.toString() ?: defaultAgpVersion
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.10"
        classpath "com.android.tools.build:gradle:$agpVersion"
        classpath "com.slack.keeper:keeper"
    }
}

plugins {
    id("com.diffplug.spotless") version "6.10.0" apply false
}

String resolvedJvmTarget = System.getenv().getOrDefault("ci_java_version", "11")
allprojects {
    repositories {
        google()
        mavenCentral()
    }

    plugins.withType(KotlinBasePlugin.class).configureEach {
        project.tasks.withType(KotlinCompile).configureEach {
            kotlinOptions {
                jvmTarget = resolvedJvmTarget
                freeCompilerArgs += ['-progressive']
            }
        }
    }
}

apply plugin: "com.diffplug.spotless"
spotless {
    format("misc") {
        target("**/*.md", ".gitignore")
        trimTrailingWhitespace()
        endWithNewline()
    }
    String ktlintVersion = "0.46.0"
    Map<String, String> ktlintUserData = ["indent_size": "2", "continuation_indent_size": "2"]
    kotlin {
        target("**/*.kt")
        ktlint(ktlintVersion).editorConfigOverride(ktlintUserData)
        trimTrailingWhitespace()
        endWithNewline()
        licenseHeaderFile(rootProject.file("spotless/copyright.kt"))
        targetExclude("**/copyright.kt")
    }
    kotlinGradle {
        target("**/*.kts")
        ktlint(ktlintVersion).editorConfigOverride(ktlintUserData)
        trimTrailingWhitespace()
        endWithNewline()
        licenseHeaderFile("spotless/copyright.kt", "(import|plugins|buildscript|dependencies|dependencyResolutionManagement|pluginManagement|rootProject)")
    }
    java {
        target("**/*.java")
        googleJavaFormat('1.14.0').reflowLongStrings()
        trimTrailingWhitespace()
        endWithNewline()
        licenseHeaderFile(rootProject.file("spotless/copyright.java"))
        targetExclude("**/copyright.java")
    }
}
